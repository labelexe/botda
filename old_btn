
        UserID = event.from_chat


        # buttons

        # start action
        bot.send_actions(chat_id=event.from_chat, actions=["typing"])
        sleep(2)
        bot.send_actions(chat_id=event.from_chat, actions=["looking"])
        sleep(2)

        # messages
        user_firstname = bot.get_chat_info(chat_id=event.from_chat).json()['firstName'] #–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        bot.send_text(chat_id=event.from_chat, text="üëã \n–ü—Ä–∏–≤–µ—Ç, " + user_firstname + "."
                                                    "\n–ï—Å–ª–∏ –≤—ã –∏—â–µ—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –∏ COVID-19 ü¶†ü¶†ü¶†,"
                                                    "–≤–æ—Ç –ø–∞—Ä—É –¥–æ—Å—Ç–∞–≤–µ—Ä–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏–∑ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")

        confirmed_count= CoronaApiInform()
        bot.send_text(chat_id=event.from_chat, text="–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç: \n \n"
                                                    "ü§í –ó–∞–±–æ–ª–µ–≤—à–∏–µ: " + str(confirmed_count[0]) + "\n\n"
                                                    "üíÄ –°–∫–æ–Ω—á–∞–≤—à–∏–µ—Å—è: " + str(confirmed_count[1]) + "\n\n"
                                                    "üò∑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å: " + str(confirmed_count[2]))


        #–ö–ù–û–ü–ö–ê - –î–æ—Å—Ç–∞–≤–µ—Ä–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        buttons = "[{}]".format(json.dumps([{"text": "–ü–æ–¥—Ä–æ–±–Ω–µ–µ",  "callbackData": "call_button_corona_news","style": "primary"}]))
        bot.send_text(chat_id=event.from_chat, text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –¥–æ—Å—Ç–∞–≤–µ—Ä–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n üá∑üá∫ –†–æ—Å—Å–∏–∏", inline_keyboard_markup=buttons)

        # –ö–ù–û–ü–ö–ê - –¢–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        buttons2 = "[{}]".format(json.dumps([{"text": "–ü–æ–¥—Ä–æ–±–Ω–µ–µ",  "callbackData": "call_button_safety", "style": "primary"}]))
        bot.send_text(chat_id=event.from_chat, text="üò∑üíß–¢–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ üßºü§≤", inline_keyboard_markup=buttons2)

        #–ö–ù–û–ü–ö–ê - –ü–æ–¥–ø–∏—Å–∫–∞
        buttons2 = "[{}]".format(json.dumps([{"text": "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ",  "callbackData": "call_button_subscribe", "style": "primary"}]))
        bot.send_text(chat_id=event.from_chat, text="‚ö† –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π! \n–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.", inline_keyboard_markup=buttons2)



# Events Handlers Method
from Handlers import *

# Button Listener
# todo –ú–µ–Ω—å—à–µ –∫–æ–¥–∞
#
def buttons(bot, event):
    # Covid(–ö–æ—Ä–æ–Ω–∞ –≤–∏—Ä—É—Å) –¥–æ—Å—Ç–∞–≤–µ—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
    if event.data['callbackData'] == "call_button_corona_news":
        HandlerCoronaNews(bot, event.data)

        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    elif event.data['callbackData'] == "call_button_safety":
        HandlerSafety(bot, event.data)
        # –ü–æ–¥–ø–∏—Å–∫–∞
    elif event.data['callbackData'] == "call_button_subscribe":
        HandlerSubscribe(bot, event.data)


bot.dispatcher.add_handler(BotButtonCommandHandler(callback=buttons)) #buttonHandler



def CoronaApiInform():
    #http://coronavirus-tracker-api.herokuapp.com/v2/locations/187
    r = requests.get('http://coronavirus-tracker-api.herokuapp.com/v2/locations/187')
    location = r.json()['location']
    # print(location['country'])
    # print(location['latest'])

    confirmed = location['latest']['confirmed'] # –∏–Ω–¥–∏—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ
    deaths = location['latest']['deaths']  # —Å–∫–æ–Ω—á–∞–ª–æ—Å—å
    recovered = location['latest']['recovered']  # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å

    return [confirmed, deaths, recovered]
